"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamConsumer = void 0;
const connection_pool_1 = require("./connection_pool");
class StreamConsumer {
    constructor(handle, params, filter) {
        this.handle = handle;
        this.filter = filter;
        this.connection = params.connection;
        this.stream = params.stream;
        this.consumerId = params.consumerId;
        this.consumerRef = params.consumerRef;
        this.offset = params.offset;
        this.connection.incrRefCount();
    }
    async close() {
        this.connection.decrRefCount();
        if (connection_pool_1.ConnectionPool.removeIfUnused(this.connection)) {
            await this.connection.close();
        }
    }
    storeOffset(offsetValue) {
        if (!this.consumerRef)
            throw new Error("ConsumerReference must be defined in order to use this!");
        return this.connection.storeOffset({ stream: this.stream, reference: this.consumerRef, offsetValue });
    }
    queryOffset() {
        if (!this.consumerRef)
            throw new Error("ConsumerReference must be defined in order to use this!");
        return this.connection.queryOffset({ stream: this.stream, reference: this.consumerRef });
    }
    getConnectionInfo() {
        const { host, port, id, readable, localPort } = this.connection.getConnectionInfo();
        return { host, port, id, readable, localPort };
    }
}
exports.StreamConsumer = StreamConsumer;
//# sourceMappingURL=consumer.js.map